{"version":3,"file":"js/about.2c4fa41b.js","mappings":"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","sources":["webpack://hello-world/./src/views/GameView.vue","webpack://hello-world/src/views/GameView.vue","webpack://hello-world/./src/views/GameView.vue?7c5b","webpack://hello-world/./src/views/GameView.vue?d6a4"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"about w3-padding\"},[_c('h4',[_vm._v(\"Чаа оюн\")]),_c('p',{staticClass:\"w3-text-red\"},[_vm._v(\"\\\"Чангыс каттап ойнаар!\\\"\")]),(_vm.exst)?_c('el-button',{attrs:{\"disabled\":\"\"},on:{\"click\":function($event){return _vm.rand_zag()}}},[_vm._v(\"Эгелээр\")]):_c('el-button',{on:{\"click\":function($event){return _vm.rand_zag()}}},[_vm._v(\"Эгелээр\")]),_c('el-divider'),_c('el-row',_vm._l((_vm.arr_view),function(el){return _c('el-col',{key:el.id,staticStyle:{\"margin\":\"5px\",\"min-height\":\"150px\"},attrs:{\"span\":10}},[_c('div',{class:'container '+_vm.mas[el-1].bg,style:('display:'+_vm.mas[el-1].display),on:{\"click\":function($event){return _vm.select(_vm.mas[el-1])}}},[(_vm.mas[el-1].isA)?_c('p',[_vm._v(_vm._s(_vm.mas[el-1].true_a))]):_c('p',[_vm._v(_vm._s(_vm.mas[el-1].q)+\" ?\")])])])}),1)],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div class=\"about w3-padding\">\n    <h4>Чаа оюн</h4> \n    <p class=\"w3-text-red\">\"Чангыс каттап ойнаар!\"</p>\n    <el-button v-if=\"exst\" @click=\"rand_zag()\" disabled>Эгелээр</el-button>\n    <el-button v-else @click=\"rand_zag()\">Эгелээр</el-button>\n    \n    <el-divider></el-divider>\n    \n    <el-row>\n        <el-col v-for=\"el in arr_view\" :key=\"el.id\" style=\"margin: 5px;min-height: 150px;\" :span=\"10\" >\n           <div :class=\"'container '+mas[el-1].bg\" :style=\"'display:'+mas[el-1].display\" @click=\"select(mas[el-1])\">\n             <!-- <p v-if=\"mas[arr_view[el-1]].isA\">{{ mas[arr_view[el-1]].true_a}}</p>\n             <p v-else>{{ mas[arr_view[el-1]].q}}</p> -->\n              <!-- {{ cont_view(mas[el-1]) }} -->\n              <p v-if=\"mas[el-1].isA\">{{ mas[el-1].true_a }}</p>\n              <p v-else>{{ mas[el-1].q }} ?</p>\n          </div>\n        </el-col>\n        \n    </el-row>\n    \n    \n  </div>\n</template>\n<script>\n import {store} from '../store'\n import bridge from '@vkontakte/vk-bridge';\nexport default {\n  data() {\n     return{\n        mas:[],\n        exst:false,\n        defeat:0,\n        ender:0,\n        arr_view:[], // массив случайных 12 чисел\n        col:0,\n        sel_mas:[]  // массив для выбора ответов\n     }\n  },\n  computed:{\n    zag(){\n      return store.state.zag\n    },\n    users(){\n      return store.state.users\n    }\n    \n\n  }\n  ,\n  methods:{\n    \n    cont_view(el){\n       console.log(el.q)\n       console.log(el.isA)\n    },\n    rand_view(){   // функция отбирает 12 случайных чисел\n      this.arr_view=[]\n      do {\n            const randomNumber = Math\n                .floor(Math.random() * 12) + 1\n            if (!this.arr_view.includes(randomNumber)) {\n              this.arr_view.push(randomNumber);\n            }\n        } \n        while (this.arr_view.length <12 );\n    },\n    rand_zag(){   // функция отбирает 6 случайных записей из массива\n       this.mas = []\n       this.ender = 0 \n        do {\n            const randomNumber = Math\n                .floor(Math.random() * 70) + 1\n            if (this.mas.length!=0){\n            \n                if (!this.mas.includes( {\n                                    id:this.zag[randomNumber].id,\n                                    isA:false,\n                                    display:'block',\n                                    bg:'aqua',\n                                    q:this.zag[randomNumber].q,\n                                    true_a:this.zag[randomNumber].true_a,\n                                    hint:this.zag[randomNumber].hint,\n                                    })) \n            {\n              this.mas.push(\n                          {\n                            id:this.zag[randomNumber].id,\n                            isA:false,\n                            bg:'aqua',\n                            display:'block',\n                            q:this.zag[randomNumber].q,\n                            true_a:this.zag[randomNumber].true_a,\n                            hint:this.zag[randomNumber].hint,\n                          }  \n              );\n            }}\n            else {\n              this.mas.push(\n                          {\n                            id:this.zag[randomNumber].id,\n                            isA:false,\n                            bg:'aqua',\n                            display:'block',\n                            q:this.zag[randomNumber].q,\n                            true_a:this.zag[randomNumber].true_a,\n                            hint:this.zag[randomNumber].hint,\n                          }  \n              );\n            }\n        } \n        while (this.mas.length <6 );\n        \n        this.get_a()\n        \n    },\n    get_a(){   // функция добавляет ответы в массив mas \n       for (let i in this.mas){\n         \n        \n              this.mas.push({  \n                  id:this.mas[i].id+'a',\n                  isA:true,\n                  bg:'green',\n                  display:'block',\n                  q:this.mas[i].q,\n                  true_a:this.mas[i].true_a,\n                  hint:this.mas[i].hint,\n                })\n       }    \n\n       this.rand_view()\n       this.defeat = 0\n    },\n    view(){  // просморт содержимого массивов\n      \n      console.log(this.arr_view)\n      console.log(this.mas)\n    }\n    ,\n    select(el){   // обработчик нажатия на блок\n      console.log(this.sel_mas)\n      if (!el.isA){   // если не ответ то обнуляем и пушим вопрос\n        this.sel_mas = []\n        for (let a in this.mas){\n                if (!this.mas[a].isA){\n                  this.mas[a].bg = 'aqua'\n                }\n              }\n        this.sel_mas.push({true_a:el.true_a,id:el.id})\n        this.mas.filter((n)=>{    // фон выделения\n            return n.id.match(el.id)\n          })[0].bg = 'selected'\n      } else {        // если ответ то проверяем на количество\n        if (this.sel_mas.length<2){\n          this.sel_mas.push({true_a:el.true_a,id:el.id})\n          if (this.sel_mas[0].true_a==this.sel_mas[1].true_a){\n            this.$notify({\n                title: 'Шын',\n                message: ' ',\n                type: 'success'\n              });\n              \n              this.ender++\n              for (let m in this.mas){\n                this.mas.filter((n)=>{    // фон выделения\n                    return n.id.match(this.sel_mas[m].id)\n                  })[0].display = 'none'\n              }\n              for (let a in this.mas){\n                if (!this.mas[a].isA){\n                  this.mas[a].bg = 'aqua'\n                }\n              }\n          } else {\n            this.$notify({\n                title: 'Меге',\n                message: '',\n                type: 'error'\n              });\n              this.defeat++\n              for (let a in this.mas){\n                if (!this.mas[a].isA){\n                  this.mas[a].bg = 'aqua'\n                }\n              }\n          }\n        }\n         \n        \n      }\n\n       this.end()      \n\n\n      \n         \n    },\n    get_id(){\n      bridge.send('VKWebAppGetUserInfo')\n          .then((data) => { \n            if (data.id) {\n              // Данные пользователя получены\n             \n              this.start(data.id)\n            }    \n          })\n          .catch((error) => {\n            // Ошибка\n            console.log(error);\n          });\n    },\n    start(id){\n        for (let u in this.users){\n          console.log(this.users[u].vkid)\n          if (this.users[u].vkid==id){\n            \n            this.exst = true\n          }\n        }\n    }\n    \n  }\n  ,\n  watch:{\n    ender(to){\n      console.log(to)\n      if (to==6){\n        bridge.send('VKWebAppGetUserInfo')\n          .then((data) => { \n            if (data.id) {\n              // Данные пользователя получены\n              console.log(data.id);\n              console.log(data.last_name);\n              console.log(data.first_name);\n              store.dispatch('addUser',{fname:data.first_name,\n                lname:data.last_name,defeat:this.defeat,vkid:data.id})\n              alert('Туннелинер бижитинген, четирген!')  \n            }    \n          })\n          .catch((error) => {\n            // Ошибка\n            console.log(error);\n          });\n        \n      }\n    }\n   \n\n  },\n  created(){\n    this.get_id()\n  }\n}\n</script>\n<style>\n   .container{\n    min-height: 150px; \n    padding: 10px;\n    \n    border-radius: 10px;\n    cursor: pointer;\n   }\n   .aqua{\n    background-color:aquamarine;\n   }\n   .selected{\n    background-color: chocolate;\n   }\n   .green{\n    background-color: bisque;\n   }\n\n</style>","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./GameView.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./GameView.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./GameView.vue?vue&type=template&id=62fa4104\"\nimport script from \"./GameView.vue?vue&type=script&lang=js\"\nexport * from \"./GameView.vue?vue&type=script&lang=js\"\nimport style0 from \"./GameView.vue?vue&type=style&index=0&id=62fa4104&prod&lang=css\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"names":["render","_vm","this","_c","_self","staticClass","_v","exst","attrs","on","$event","rand_zag","_l","arr_view","el","key","id","staticStyle","class","mas","bg","style","display","select","isA","_s","true_a","q","staticRenderFns","data","defeat","ender","col","sel_mas","computed","zag","store","state","users","methods","cont_view","console","log","rand_view","randomNumber","Math","floor","random","includes","push","length","hint","get_a","i","view","$notify","title","message","type","m","filter","n","match","a","end","get_id","bridge","then","start","catch","error","u","vkid","watch","to","last_name","first_name","dispatch","fname","lname","alert","created","component"],"sourceRoot":""}